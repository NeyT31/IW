#include <iostream>
#include <vector>
#include <sstream>
#include <algorithm>

using namespace std;
vector<int> ВводДанных(string строкаВвода) {
    vector<int> списокЧисел;
    stringstream ss(строкаВвода);
    int число;
    while (ss >> число) {
        списокЧисел.push_back(число);
    }
    return списокЧисел;
}

int ОбработкаДанных(vector<int> списокЧисел) {
    int суммаВыходов = 0;
    for (int число : списокЧисел) {
        суммаВыходов += число;
    }
    double количествоСотрудников = static_cast<double>(суммаВыходов) / 27;
    if (количествоСотрудников == static_cast<int>(количествоСотрудников)) {
        int целоеКоличествоСотрудников = static_cast<int>(количествоСотрудников);
        if (*max_element(списокЧисел.begin(), списокЧисел.end()) <= целоеКоличествоСотрудников) {
            return целоеКоличествоСотрудников;
        }
        else {
            return -1;
        }
    }
    else {
        return -1;
    }
}

void ВыводРезультата(int результат) {
    if (результат >= 0) {
        cout << "Общее количество сотрудников: " << результат << endl;
    }
    else {
        cout << "Ошибка: некорректные входные данные" << endl;
    }
}

// Функция для тестирования модуля ввода данных
void ТестВводаДанных() {
    setlocale(LC_ALL, "RUS");
    vector<int> ожидаемыйСписок = { 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0 };
    vector<int> результат = ВводДанных("10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 0 0 0 0");

    if (std::equal(результат.begin(), результат.end(), ожидаемыйСписок.begin())) {
        cout << "Тест ВводДанных прошел успешно." << endl;
    }
    else {
        cout << "Тест ВводДанных не прошел." << endl;
    }
}

// Функция для тестирования модуля обработки данных
void ТестОбработкиДанных() {
    setlocale(LC_ALL, "RUS");
    // Корректные входные данные
    if (ОбработкаДанных({ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 0, 0 }) == 10) {
        cout << "Тест ОбработкаДанных (корректные данные 1) прошел успешно." << endl;
    }
    else {
        cout << "Тест ОбработкаДанных (корректные данные 1) не прошел." << endl;
    }
    if (ОбработкаДанных({ 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15, 14, 15 }) == 15) {
        cout << "Тест ОбработкаДанных (корректные данные 2) прошел успешно." << endl;
    }
    else {
        cout << "Тест ОбработкаДанных (корректные данные 2) не прошел." << endl;
    }
    if (ОбработкаДанных({ 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20 }) == 20) {
        cout << "Тест ОбработкаДанных (корректные данные 3) прошел успешно." << endl;
    }
    else {
        cout << "Тест ОбработкаДанных (корректные данные 3) не прошел." << endl;
    }

    // Некорректные входные данные
    if (ОбработкаДанных({ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }) == -1) {
        cout << "Тест ОбработкаДанных (некорректные данные 1) прошел успешно." << endl;
    }
    else {
        cout << "Тест ОбработкаДанных (некорректные данные 1) не прошел." << endl;
    }
    if (ОбработкаДанных({ 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11 }) == -1) {
        cout << "Тест ОбработкаДанных (некорректные данные 2) прошел успешно." << endl;
    }
    else {
        cout << "Тест ОбработкаДанных (некорректные данные 2) не прошел." << endl;
    }
}

int main() {
    // Запуск тестов для модуля ввода данных
    ТестВводаДанных();

    // Запуск тестов для модуля обработки данных
    ТестОбработкиДанных();

    return 0;
}